@mixin flexcenter() {
	display: -webkit-box;
	display: -ms-flexbox;
	display: flex;
	-webkit-box-align: center;
	-ms-flex-align: center;
	align-items: center;
	-webkit-box-pack: justify;
	-ms-flex-pack: justify;
	justify-content: space-between;
	-ms-flex-wrap: wrap;
	flex-wrap: wrap;
}
@mixin flexgap() {
	display: -webkit-box;
	display: -ms-flexbox;
	display: flex;
	-webkit-box-align: center;
	-ms-flex-align: center;
	align-items: center;
	-ms-flex-wrap: wrap;
	flex-wrap: wrap;
}
@mixin gap($gap) {
	-webkit-column-gap: $gap;
	-moz-column-gap: $gap;
	column-gap: $gap;
}
@mixin transition($delay) {
	-webkit-transition: $delay;
	-o-transition: $delay;
	transition: $delay;
}
@mixin textclamp($clamp) {
	display: -webkit-box;
	-webkit-line-clamp: $clamp;
	-webkit-box-orient: vertical;  
	overflow: hidden;
}
@mixin textellipsis() {
	overflow: hidden;
	white-space: nowrap;
	-o-text-overflow: ellipsis;
	text-overflow: ellipsis;
} 
@mixin minWidth($breakpoint) {
	@media only screen and (min-width: $breakpoint) {
		@content; 
	}
}
@mixin maxWidth($breakpoint) {
	@media only screen and (max-width: $breakpoint) {
		@content; 
	}
}
@mixin about($minBreakpoint, $maxBreakpoint) {
	@media screen and (min-width: $minBreakpoint) and (max-width: $maxBreakpoint) {
		@content;	
	}
}